-- MySQL Script generated by MySQL Workbench
-- Mon Jun 10 11:23:05 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema PARKINGBOX
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema PARKINGBOX
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `PARKINGBOX` DEFAULT CHARACTER SET utf8 ;
USE `PARKINGBOX` ;

-- -----------------------------------------------------
-- Table `PARKINGBOX`.`TARIFA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARKINGBOX`.`TARIFA` (
  `id_tarifa` VARCHAR(6) NOT NULL COMMENT 'Llave Primaria. Id tarifa',
  `minutos` INT(6) NOT NULL COMMENT 'Nombre de la tarifa asociada',
  `mensualidad` INT(6) NOT NULL,
  `plena` INT(6) NOT NULL,
  `perdidatk` INT(6) NOT NULL,
  PRIMARY KEY (`id_tarifa`))
ENGINE = InnoDB
COMMENT = 'TABLA TARIFA. Creada para mantener registro de la tarifa con respecto al tipo de vehículo';


-- -----------------------------------------------------
-- Table `PARKINGBOX`.`TIPO_VEHICULO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARKINGBOX`.`TIPO_VEHICULO` (
  `id_tipo_vh` VARCHAR(6) NOT NULL COMMENT 'Lave Foránea. Id del tipo de vehículo',
  `nom_tipo_vh` VARCHAR(30) NOT NULL COMMENT 'Nombre del tipo de vehículo',
  `TARIFA_id_tarifa` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`id_tipo_vh`, `TARIFA_id_tarifa`),
  INDEX `fk_TIPO_VEHICULO_TARIFA1_idx` (`TARIFA_id_tarifa` ASC) VISIBLE,
  CONSTRAINT `fk_TIPO_VEHICULO_TARIFA1`
    FOREIGN KEY (`TARIFA_id_tarifa`)
    REFERENCES `PARKINGBOX`.`TARIFA` (`id_tarifa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'TABLA TIPO DE VEHICULO. Creada para mantener la identificación de la gama del vehículo';


-- -----------------------------------------------------
-- Table `PARKINGBOX`.`VEHICULO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARKINGBOX`.`VEHICULO` (
  `id_placa` VARCHAR(10) NOT NULL,
  `descri_vh` TEXT(100) NOT NULL COMMENT 'Descripción vehículo',
  `TIPO_VEHICULO_id_tipo_vh` VARCHAR(6) NOT NULL,
  `TIPO_VEHICULO_TARIFA_id_tarifa` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`id_placa`, `TIPO_VEHICULO_id_tipo_vh`, `TIPO_VEHICULO_TARIFA_id_tarifa`),
  INDEX `fk_VEHICULO_TIPO_VEHICULO1_idx` (`TIPO_VEHICULO_id_tipo_vh` ASC, `TIPO_VEHICULO_TARIFA_id_tarifa` ASC) VISIBLE,
  CONSTRAINT `fk_VEHICULO_TIPO_VEHICULO1`
    FOREIGN KEY (`TIPO_VEHICULO_id_tipo_vh` , `TIPO_VEHICULO_TARIFA_id_tarifa`)
    REFERENCES `PARKINGBOX`.`TIPO_VEHICULO` (`id_tipo_vh` , `TARIFA_id_tarifa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'TABLA VEHICULO. Creada para mantener la identificación unica por cada vehículo';


-- -----------------------------------------------------
-- Table `PARKINGBOX`.`PARQUEADERO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARKINGBOX`.`PARQUEADERO` (
  `id_parq` VARCHAR(6) NOT NULL COMMENT 'Llave Primaria. Id parqueadero',
  `nombre_parq` VARCHAR(100) NOT NULL,
  `dirección_parq` VARCHAR(200) NOT NULL COMMENT 'Dirección parqueadero',
  PRIMARY KEY (`id_parq`))
ENGINE = InnoDB
COMMENT = 'TABLA PARQUEADERO. Creada para mantener registro de parqueaderos existentes por ciudad';


-- -----------------------------------------------------
-- Table `PARKINGBOX`.`FUNCIONARIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARKINGBOX`.`FUNCIONARIO` (
  `id_funcionario` VARCHAR(6) NOT NULL COMMENT 'Llave Primária. Id Funcionario',
  `nom_fun` VARCHAR(20) NOT NULL COMMENT 'Nombre del funcionario',
  `apes_fun` VARCHAR(40) NOT NULL COMMENT 'Apellido primero del funcionario',
  `correo` VARCHAR(200) NOT NULL,
  `contrasena` VARCHAR(250) NOT NULL,
  `PARQUEADERO_id_parq` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`id_funcionario`, `PARQUEADERO_id_parq`),
  INDEX `fk_FUNCIONARIO_PARQUEADERO1_idx` (`PARQUEADERO_id_parq` ASC) VISIBLE,
  CONSTRAINT `fk_FUNCIONARIO_PARQUEADERO1`
    FOREIGN KEY (`PARQUEADERO_id_parq`)
    REFERENCES `PARKINGBOX`.`PARQUEADERO` (`id_parq`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'TABLA FUNCIONARIO. Creada para mantener identificado a los trabajadores y jefes en el sistema';


-- -----------------------------------------------------
-- Table `PARKINGBOX`.`BAHIA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARKINGBOX`.`BAHIA` (
  `id_bh` VARCHAR(6) NOT NULL COMMENT 'Llave Primaria. Id tipo de Bahía',
  `nom_tipo_bh` VARCHAR(30) NOT NULL COMMENT 'Nombre tipo de Bahía',
  `cantidad_bh` INT(3) NOT NULL,
  `estado_bh` TINYINT NOT NULL,
  `PARQUEADERO_id_parq` VARCHAR(6) NOT NULL,
  PRIMARY KEY (`id_bh`, `PARQUEADERO_id_parq`),
  INDEX `fk_BAHIA_PARQUEADERO1_idx` (`PARQUEADERO_id_parq` ASC) VISIBLE,
  CONSTRAINT `fk_BAHIA_PARQUEADERO1`
    FOREIGN KEY (`PARQUEADERO_id_parq`)
    REFERENCES `PARKINGBOX`.`PARQUEADERO` (`id_parq`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabla para establecimiento de Bahias';


-- -----------------------------------------------------
-- Table `PARKINGBOX`.`GENERADORFAC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARKINGBOX`.`GENERADORFAC` (
  `id_num_factura` VARCHAR(10) NOT NULL COMMENT 'Llave Primaria. Id de consecutivo factura',
  `totalizado_tarifa` INT NOT NULL COMMENT 'Hora de ingreso del vehículo',
  `iva_aplicado` INT(2) NOT NULL COMMENT 'Hora de salida del vehículo',
  `total_servicio` INT(8) NOT NULL COMMENT 'Resultado liquidación $',
  `condiciones_ser` VARCHAR(300) NOT NULL,
  PRIMARY KEY (`id_num_factura`))
ENGINE = InnoDB
COMMENT = 'TABLA FACTURA. Creada para mantener corelación de la información asociada al documento de factura';


-- -----------------------------------------------------
-- Table `PARKINGBOX`.`REGISTRO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARKINGBOX`.`REGISTRO` (
  `id_registro` INT NOT NULL AUTO_INCREMENT COMMENT 'Llave Primaria. Registro de vehículos',
  `fecha_entradayhora` DATETIME NOT NULL COMMENT 'Fecha de ingreso del vehículo',
  `fecha_salidayhora` DATETIME NOT NULL COMMENT 'Fecha de salida del vehículo',
  `VEHICULO_id_placa` VARCHAR(10) NOT NULL,
  `PARQUEADERO_id_parq` VARCHAR(6) NOT NULL,
  `GENERADORFAC_id_num_factura` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id_registro`, `VEHICULO_id_placa`, `PARQUEADERO_id_parq`, `GENERADORFAC_id_num_factura`),
  INDEX `fk_REGISTRO_VEHICULO1_idx` (`VEHICULO_id_placa` ASC) VISIBLE,
  INDEX `fk_REGISTRO_PARQUEADERO1_idx` (`PARQUEADERO_id_parq` ASC) VISIBLE,
  INDEX `fk_REGISTRO_GENERADORFAC1_idx` (`GENERADORFAC_id_num_factura` ASC) VISIBLE,
  CONSTRAINT `fk_REGISTRO_VEHICULO1`
    FOREIGN KEY (`VEHICULO_id_placa`)
    REFERENCES `PARKINGBOX`.`VEHICULO` (`id_placa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_REGISTRO_PARQUEADERO1`
    FOREIGN KEY (`PARQUEADERO_id_parq`)
    REFERENCES `PARKINGBOX`.`PARQUEADERO` (`id_parq`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_REGISTRO_GENERADORFAC1`
    FOREIGN KEY (`GENERADORFAC_id_num_factura`)
    REFERENCES `PARKINGBOX`.`GENERADORFAC` (`id_num_factura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'TABLA REGISTRO. Creada para mantener registro de ingreso y salida de vehículos respecto al tiempo de uso';


-- -----------------------------------------------------
-- Table `PARKINGBOX`.`ROL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARKINGBOX`.`ROL` (
  `id_rol` VARCHAR(6) NOT NULL,
  `nom_rol` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_rol`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PARKINGBOX`.`FUNCIONARIO_has_ROL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARKINGBOX`.`FUNCIONARIO_has_ROL` (
  `FUNCIONARIO_id_funcionario` VARCHAR(6) NOT NULL,
  `ROL_id_rol` VARCHAR(6) NOT NULL,
  PRIMARY KEY (`FUNCIONARIO_id_funcionario`, `ROL_id_rol`),
  INDEX `fk_FUNCIONARIO_has_ROL_ROL1_idx` (`ROL_id_rol` ASC) VISIBLE,
  INDEX `fk_FUNCIONARIO_has_ROL_FUNCIONARIO1_idx` (`FUNCIONARIO_id_funcionario` ASC) VISIBLE,
  CONSTRAINT `fk_FUNCIONARIO_has_ROL_FUNCIONARIO1`
    FOREIGN KEY (`FUNCIONARIO_id_funcionario`)
    REFERENCES `PARKINGBOX`.`FUNCIONARIO` (`id_funcionario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_FUNCIONARIO_has_ROL_ROL1`
    FOREIGN KEY (`ROL_id_rol`)
    REFERENCES `PARKINGBOX`.`ROL` (`id_rol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
